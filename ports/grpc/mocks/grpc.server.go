// Code generated by MockGen. DO NOT EDIT.
// Source: ports/grpc/grpc.type.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	net "net"
	reflect "reflect"
)

// MockServer is a mock of Server interface
type MockServer struct {
	ctrl     *gomock.Controller
	recorder *MockServerMockRecorder
}

// MockServerMockRecorder is the mock recorder for MockServer
type MockServerMockRecorder struct {
	mock *MockServer
}

// NewMockServer creates a new mock instance
func NewMockServer(ctrl *gomock.Controller) *MockServer {
	mock := &MockServer{ctrl: ctrl}
	mock.recorder = &MockServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServer) EXPECT() *MockServerMockRecorder {
	return m.recorder
}

// Serve mocks base method
func (m *MockServer) Serve() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serve")
	ret0, _ := ret[0].(error)
	return ret0
}

// Serve indicates an expected call of Serve
func (mr *MockServerMockRecorder) Serve() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serve", reflect.TypeOf((*MockServer)(nil).Serve))
}

// MockgrpcInterface is a mock of grpcInterface interface
type MockgrpcInterface struct {
	ctrl     *gomock.Controller
	recorder *MockgrpcInterfaceMockRecorder
}

// MockgrpcInterfaceMockRecorder is the mock recorder for MockgrpcInterface
type MockgrpcInterfaceMockRecorder struct {
	mock *MockgrpcInterface
}

// NewMockgrpcInterface creates a new mock instance
func NewMockgrpcInterface(ctrl *gomock.Controller) *MockgrpcInterface {
	mock := &MockgrpcInterface{ctrl: ctrl}
	mock.recorder = &MockgrpcInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockgrpcInterface) EXPECT() *MockgrpcInterfaceMockRecorder {
	return m.recorder
}

// Serve mocks base method
func (m *MockgrpcInterface) Serve(lis net.Listener) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Serve", lis)
	ret0, _ := ret[0].(error)
	return ret0
}

// Serve indicates an expected call of Serve
func (mr *MockgrpcInterfaceMockRecorder) Serve(lis interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serve", reflect.TypeOf((*MockgrpcInterface)(nil).Serve), lis)
}
